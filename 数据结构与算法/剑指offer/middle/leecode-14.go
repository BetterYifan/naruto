package middle

/***
 *                    .::::.
 *                  .::::::::.
 *                 :::::::::::  FUCK YOU
 *             ..:::::::::::'
 *           '::::::::::::'
 *             .::::::::::
 *        '::::::::::::::..
 *             ..::::::::::::.
 *           ``::::::::::::::::
 *            ::::``:::::::::'        .:::.
 *           ::::'   ':::::'       .::::::::.
 *         .::::'      ::::     .:::::::'::::.
 *        .:::'       :::::  .:::::::::' ':::::.
 *       .::'        :::::.:::::::::'      ':::::.
 *      .::'         ::::::::::::::'         ``::::.
 *  ...:::           ::::::::::::'              ``::.
 * ```` ':.          ':::::::::'                  ::::..
 *                    '.:::::'                    ':'````..
 */
func cut(n int) (m int) {
	dp := make([]int, n+1)
	dp[2] = 1
	// i代表绳子长度
	for i := 3; i <= n; i++ {
		for j := 2; j < i; j++ {
			//max((i-j)*j, j*dp[i-1]) ,减去第一段长度为j的绳子后，可以剪或者不剪
			dp[i] = max(dp[i], max((i-j)*j, j*dp[i-j]))
		}
	}
	return dp[n]
}

func max(a, b int) int {
	if a >= b {
		return a
	} else {
		return b
	}
}
